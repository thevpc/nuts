```!include classpath:/net/thevpc/nuts/runtime/includes/standard-header.ntf```


```sh ntf``` aka ##nuts text format## is a markdown like text format enabling colored text styles.
```sh ntf``` is the standard format used in the standard output and standard error. It's as
 well the standard format used in help manuals.

type (```sh nuts help --colors```) to display this help

##) NTF special characters:
#### \# \u001E \\ ` #### are special characters
#### : { and } #### are also special characters when used inside \# styles
####\##### defines primary styles
####\\u001E#### is a 'nop' character. It's used as a separator when required. It's not displayed.
####\```Text\```#### defines verbatim text
####\```lang code-bloc\```#### defines formatted code in the given language/format (such as sh, java, json, ...)
####\\#### You can escape special characters using ####\\#### character


##) NTF COLORS:
nuts supports 4 types of colors :
 */ primary (foreground) and secondary (background) colors are defined by themes and are customizable
             syntax foreground   : ```[#]+Text[#]+``` or ```##:p<0-15>: Text##```
             syntax background   : ```##:s<0-15>: Text##```
 */ 4bit colors (0-15) define a predefined color palette of 16 colors as defined by ANSI terminal formats
             syntax foreground   : ```##:f<0-15>: Text##```
             syntax background   : ```##:b<0-15>: Text##```
 */ 8bit colors (0-255) define a predefined color palette of 256 colors as defined by ANSI terminal formats
             syntax foreground   : ```##:f<0-255>: Text##```
             syntax background   : ```##:b<0-255>: Text##```
 */ 24bit colors (r-g-b) define a predefined color palette of 16M colors as defined by ANSI terminal formats
             syntax foreground   : ```##:fx<hexa-6-digits>: Text##```
             syntax background   : ```##:bx<hexa-6-digits>: Text##```

##Format##                                   | ##Display##                       | ##Description##
----------------------------------------------------------------------------------------------------
Text ```#Text#```                              | Text #Text#                   | plain text
```##Text##```                                 | ##Text##                          | primary1 = title 1
```###Text###```                               | ###Text###                          | primary2 = title 2
```####Text####```                             | ####Text####                          | primary3 = title 3
```#####Text#####```                           | #####Text#####                          | primary4 = title 4
```######Text######```                         | ######Text######                          | primary5 = title 5
```#######Text#######```                       | #######Text#######                          | primary6 = title 6
```########Text########```                     | ########Text########                          | primary7 = title 7
```#########Text#########```                   | #########Text#########                          | primary8 = title 8
```##########Text##########```                 | ##########Text##########                          | primary9 = title 9
```##:1:Text##```  ```##:p1:Text##```  ```##:s1:Text##```  | ##:1:Text##  ##:p1:Text## ##:s1:Text##               | primary 1
```##:2:Text##```  ```##:p2:Text##```  ```##:s2:Text##```  | ##:2:Text##  ##:p2:Text## ##:s2:Text##               | primary 2
```##:3:Text##```  ```##:p3:Text##```  ```##:s3:Text##```  | ##:3:Text##  ##:p3:Text## ##:s3:Text##               | primary 3
```##:4:Text##```  ```##:p4:Text##```  ```##:s4:Text##```  | ##:4:Text##  ##:p4:Text## ##:s4:Text##               | primary 4
```##:5:Text##```  ```##:p5:Text##```  ```##:s5:Text##```  | ##:5:Text##  ##:p5:Text## ##:s5:Text##               | primary 5
```##:6:Text##```  ```##:p6:Text##```  ```##:s6:Text##```  | ##:6:Text##  ##:p6:Text## ##:s6:Text##               | primary 6
```##:7:Text##```  ```##:p7:Text##```  ```##:s7:Text##```  | ##:7:Text##  ##:p7:Text## ##:s7:Text##               | primary 7
```##:8:Text##```  ```##:p8:Text##```  ```##:s8:Text##```  | ##:8:Text##  ##:p8:Text## ##:s8:Text##               | primary 8
```##:9:Text##```  ```##:p9:Text##```  ```##:s9:Text##```  | ##:9:Text##  ##:p9:Text## ##:s9:Text##               | primary 9
```##:10:Text##``` ```##:p10:Text##``` ```##:s10:Text##``` | ##:10:Text##  ##:p10:Text## ##:s10:Text##               | primary 10
```##:11:Text##``` ```##:p11:Text##``` ```##:s11:Text##``` | ##:11:Text##  ##:p11:Text## ##:s11:Text##               | primary 11
```##:12:Text##``` ```##:p12:Text##``` ```##:s12:Text##``` | ##:12:Text##  ##:p12:Text## ##:s12:Text##               | primary 12
```##:13:Text##``` ```##:p13:Text##``` ```##:s13:Text##``` | ##:13:Text##  ##:p13:Text## ##:s13:Text##               | primary 13
```##:14:Text##``` ```##:p14:Text##``` ```##:s14:Text##``` | ##:14:Text##  ##:p14:Text## ##:s14:Text##               | primary 14
```##:15:Text##``` ```##:p15:Text##``` ```##:s15:Text##``` | ##:15:Text##  ##:p15:Text## ##:s15:Text##               | primary 15
```##:/:Text##``` ```##:_:Text##``` ```##:%:Text##```      | ##:/:Text##  ##:_:Text## ##:%:Text##               | italic, underlined, blink
```##:!:Text##``` ```##:+:Text##``` ```##:-:Text##```      | ##:!:Text##  ##:+:Text## ##:-:Text##               | reversed, bold, striked
```##:primary3:Text##```                       | ##:primary3:Text##                          | primary3
```##:secondary5:Text##```                     | ##:s4:Text##                          | secondary5
```##{s12:AA##:12:BB##\u001E##:6:CC##DD}##```  | ##{s12:AA##:12:BB##\u001E##:6:CC##DD}##                | composed colors, note the \\u001E separator
```##:f158:AA## ##:f58:BB## ##:f201:CC##```    | ##:f158:AA## ##:f58:BB## ##:f201:CC##                      | foreground 8bits colors
```##:foreground158:Text##```                  | ##:foreground158:Text##                          | foreground 158 (8bits)
```##:fxd787af:Text##```                       | ##:fxd787af:Text##                          | foreground Pink (d787af in 24bits)
```##:foregroundxd787af:Text##```              | ##:foregroundxd787af:Text##                          | foreground Pink (d787af in 24bits)
```##:b158:Text##```                           | ##:b158:Text##                          | background 158 (8bits)
```##:bxd787af:Text##```                       | ##:bxd787af:Text##                          | background Pink (24bits)

##) NTF SPECIAL CHARACTERS
NTF uses special characters as escape format. characters have different meanings in different situations,
but you will be able to escape any character using \\. You can also escape a whole text using \```

##Format##                                   | ##Display##                       | ##Description##
----------------------------------------------------------------------------------------------------
```\#\u001E```                                 | \#\u001E                       | escaped characters
\``` Text with # escaped\```               | ``` Text with # escaped```           | escaped text (note the leading space)

##) NTF STYLES:
Supported styles in NTF are defined in the following table:

##Format##                                   | ##Display##                       | ##Description##
----------------------------------------------------------------------------------------------------
\```underlined underlined\```              | ```underlined underlined```                    | underlined
\```italic italic\```                      | ```italic italic```                        | italic
\```striked striked\```                    | ```striked striked```                       | striked
\```reversed reversed\```                  | ```reversed reversed```                      | reversed
\```error error\``` \```warn warn\```  ...   | ```error error``` ```warn warn``` ```info info```  ```config config```       | several token types
...                                      | ```comments comments``` ```string string``` ```number number``` ```boolean boolean```|
                                         | ```keyword keyword``` ```option option``` ```input input```          |
                                         | ```operator operator``` ```separator separator``` ```success success```    |
                                         | ```danger danger``` ```fail fail``` ```var var``` ```pale pale```          |
\#\#:underlined underlined\#\#               | ##:underlined underlined##                    | underlined
\#\#:italic italic\#\#                       | ##:italic italic##                        | italic
\#\#:striked striked\#\#                     | ##:striked striked##                       | striked
\#\#:reversed reversed\#\#                   | ##:reversed reversed##                      | reversed
\#\#:error  error\#\#  \#\#warn  warn\#\#  ...   | ##:error  error## ##:warn  warn## ##:info info##  ##:config config##     | several embeddable token types
...                                      | ##:comments comments## ##:string string## ##:number number## ##:boolean boolean##|
                                         | ##:keyword keyword## ##:option  option## ##:input user_input##    |
                                         | ##:operator operator## ##:separator  separator## ##:success success##   |
                                         | ##:danger danger## ##:fail  fail## ##:var var## ##:pale pale##         |

##) NTF TITLES:
Titles are special formatted lines and are usable simply by suffix # chars with parentheses at the start of any new line.

#) Title 1
```#) Title 1```
##) Title 2
```##) Title 2```
###) Title 3
```###) Title 3```
####) Title 4
```####) Title 4```
#####) Title 5
```#####) Title 5```
######) Title 6
```######) Title 6```
#######) Title 7
```#######) Title 7```
########) Title 8
```########) Title 8```
#########) Title 9
```#########) Title 9```


##) NTF SYNTAX COLORING:
NTF supports as well advanced features that allow you to syntax coloring popular formats.
Particularly Xml, Json, Bash and Java are supported.

###) Xml format
####) NTF syntax
\```xml <xml n='value'></xml>\```
####) Coloring Result
```xml <xml n='value'></xml>```

###) Json format
####) NTF syntax
\```json {k:'value',n:'value'}\```
####) Coloring Result
```json {k:'value',n:'value'}```

###) Java format
####) NTF syntax

\```java
public class A{
    int a=12;
}
\```
####) Coloring Result
```java
public class A{
    int a=12;
}
```

###) Shell commandline format
####) NTF syntax
\```sh cmd arg user -option=true\```
####) Coloring Result
```sh cmd arg user -option=true```

